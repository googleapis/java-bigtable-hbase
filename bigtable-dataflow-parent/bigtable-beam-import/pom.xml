<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2017 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.google.cloud.bigtable</groupId>
    <artifactId>bigtable-dataflow-parent</artifactId>
    <version>2.7.3-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>bigtable-beam-import</artifactId>

  <properties>
    <mainClass>com.google.cloud.bigtable.beam.Main</mainClass>

    <hadoop.version>3.3.5</hadoop.version>
    <!-- Both beam (newer) & gcs-connector (older) depend on flogger -->
    <flogger.version>0.7.3</flogger.version>
  </properties>

  <!-- Adding this to resolve version conflict within beam sdk-->
  <dependencyManagement>
    <dependencies>
      <!-- Override transitive deps that have CVEs -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.21</version>
      </dependency>

      <!-- Beam -->
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-bom</artifactId>
        <version>${beam.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-google-cloud-platform-bom</artifactId>
        <version>${beam.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Version alignment -->
      <!-- annotations -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>3.31.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.18.0</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-annotations</artifactId>
        <version>1.22</version>
      </dependency>

      <!-- netty:
        There a diamond dependency on netty in beam where an older version is picked:
        beam-sdks-java-extensions-google-cloud-platform-core
          -> netty-handler (old)
          -> grpc-netty
            -> io.netty:* -> (newer)
        -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>4.1.79.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- flogger:
        beam-sdks-java-io-google-cloud-platform
          ...-> {flogger-system-backend,google-extensions}
        gcs-connector ->
          ...-> {flogger, google-extensions}
        -->
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger</artifactId>
        <version>${flogger.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>flogger-system-backend</artifactId>
        <version>${flogger.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.flogger</groupId>
        <artifactId>google-extensions</artifactId>
        <version>${flogger.version}</version>
      </dependency>

      <!-- slf4j-api
        beam-sdks-java-core
          -> slf4j-api:1.7.30
        hadoop-client-runtime
          slf4j-api:1.7.36 -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.36</version>
      </dependency>

      <!-- commons-logging
        hadoop-client-runtime
          -> commons-logging:1.1.3
        gcsio
          ...> commons-logging:1.2 -->
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
      </dependency>

      <!-- threetenbp
        beam-sdks-java-io-google-cloud-platform
          -> threetenbp (older)
          -> gax
            -> threetenbp (newer)-->
      <dependency>
        <groupId>org.threeten</groupId>
        <artifactId>threetenbp</artifactId>
        <version>1.6.5</version>
      </dependency>

      <!-- httpclient
      beam-sdks-java-io-google-cloud-platform
        -> httpclient:4.5.13
      gcs-connector
        -> opencensus-exporter-stats-stackdriver
          -> httpclient:4.5.14
       -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.14</version>
      </dependency>
      <!--
        beam-sdks-java-io-google-cloud-platform
        beam-sdks-java-extensions-google-cloud-platform-core
          -> httpcore: 4.4.14
        google-api-client
          -> httpcore: 4.4.16
      -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>4.4.16</version>
      </dependency>

      <!-- perfmark
        grpc
          -> perfmark 0.25.0
        gcsio
          -> opencensus-exporter-stats-stackdriver
            -> perfmark-api-->
      <dependency>
        <groupId>io.perfmark</groupId>
        <artifactId>perfmark-api</artifactId>
        <version>0.26.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Beam Group: should come first since we will be running in the beam ecosystem -->
    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-sdks-java-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
      <exclusions>
        <!-- Avoid circular dep -->
        <exclusion>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.cloud</groupId>
          <artifactId>google-cloud-bigtable</artifactId>
        </exclusion>

        <!-- Remove unnecessary service -->
        <exclusion>
          <groupId>com.google.cloud</groupId>
          <artifactId>google-cloud-bigquerystorage</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.cloud</groupId>
          <artifactId>google-cloud-pubsublite</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.beam</groupId>
          <artifactId>beam-sdks-java-io-kafka</artifactId>
        </exclusion>

        <exclusion>
          <groupId>com.google.cloud</groupId>
          <artifactId>google-cloud-spanner</artifactId>
        </exclusion>

        <!-- Exclude grpc-shaded-netty, everything is using unshaded netty -->
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-netty-shaded</artifactId>
        </exclusion>

        <!-- exclude test jars -->
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-sdks-java-io-hadoop-format</artifactId>
    </dependency>

    <!-- HBase Group: contains interfaces bigtable-hbase implement + serializers -->
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-shaded-mapreduce</artifactId>
      <version>${hbase2.version}</version>
      <exclusions>
        <!-- in hadoop-client-api -->
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client-api</artifactId>
      <version>${hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client-runtime</artifactId>
      <version>${hadoop.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.cloud.bigdataoss</groupId>
      <artifactId>gcs-connector</artifactId>
      <classifier>shaded</classifier>
      <!-- This should match beam's version of com.google.cloud.bigdataoss:* -->
      <version>hadoop3-2.2.6</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-netty-shaded</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Bigtable Group: ordering doesn't matter since everything is shaded -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>bigtable-hbase-beam</artifactId>
      <version>2.7.3-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
      <exclusions>
        <exclusion>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-hbase-1.x-shaded</artifactId>
        </exclusion>
        <!-- TODO: Remove this when its marked provided in beam -->
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-shaded-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.cloud.bigtable</groupId>
      <!-- Using the shaded variant to avoid conflicting with beam runner's gRPC deps.
      The versions of gRPC in bigtable and beam will never align here because beam depends on
      bigtable and this module depends on beam. To break the cycle, we use the shaded variant here.-->
      <artifactId>bigtable-hbase-2.x-shaded</artifactId>
      <version>2.7.3-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
      <!-- Workaround MNG-5899 & MSHADE-206. Maven >= 3.3.0 doesn't use the dependency reduced
      pom.xml files when invoking the build from a parent project. So we have to manually exclude
      the dependencies. Note that this works in conjunction with the manually promoted dependencies
      in bigtable-hbase-1.x-shaded/pom.xml -->
      <exclusions>
        <exclusion>
          <groupId>${project.groupId}</groupId>
          <artifactId>bigtable-hbase-2.x</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-metrics-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.opencensus</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-census</artifactId>
        </exclusion>

        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-shaded-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- Test Group -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-reload4j</artifactId>
      <version>1.7.36</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.beam</groupId>
      <artifactId>beam-runners-direct-java</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-bigtable-emulator-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.bigtable</groupId>
      <artifactId>bigtable-internal-test-helper</artifactId>
      <version>2.7.3-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-shaded-testing-util</artifactId>
      <version>${hbase2.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>1.1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <!-- Prevent maven from trying to filter the binary zip files -->
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${mainClass}</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>../../third_party/third_party_hbase_server/src/main/import/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer" />
          </transformers>
	  <filters>
	      <filter>
		  <artifact>*:*</artifact>
		  <excludes>
		      <exclude>META-INF/*.SF</exclude>
		      <exclude>META-INF/*.DSA</exclude>
		      <exclude>META-INF/*.RSA</exclude>
          <exclude>META-INF/**/pom.properties</exclude>
          <exclude>META-INF/**/pom.xml</exclude>
          <exclude>META-INF/MANIFEST.MF</exclude>
          <exclude>META-INF/LICENSE</exclude>
          <exclude>META-INF/NOTICE.txt</exclude>
          <exclude>META-INF/NOTICE</exclude>
          <exclude>META-INF/DEPENDENCIES</exclude>
          <exclude>META-INF/ASL2.0</exclude>
          <exclude>META-INF/LICENSE.txt</exclude>
          <exclude>**/*.proto</exclude>
      </excludes>
	      </filter>
	  </filters>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/*IT.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- disable integration tests by default, opt-in via profile -->
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <ignoredUnusedDeclaredDependencies>
            <ignoredUnusedDeclaredDependency>com.google.cloud.bigdataoss:gcs-connector:*:*</ignoredUnusedDeclaredDependency>
            <!-- seems to be a bug in the dependency analyzer, removing this dep reports the reverse problem
            See: https://issues.apache.org/jira/browse/MDEP-679 -->
            <ignoredUnusedDeclaredDependency> commons-logging:commons-logging:*:*</ignoredUnusedDeclaredDependency>
          </ignoredUnusedDeclaredDependencies>
          <ignoredUsedUndeclaredDependencies>
            <!-- seems to be a bug in the dependency analyzer, adding this dep reports the reverse problem
            See: https://issues.apache.org/jira/browse/MDEP-679 -->
            <ignoredUsedUndeclaredDependency>org.springframework:spring-jcl:*:*</ignoredUsedUndeclaredDependency>
          </ignoredUsedUndeclaredDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- TODO: remove the sequence file profile after kokoro jobs are migrated -->
    <profile>
      <id>sequencefileIntegrationTest</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>import-e2e-test</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <skip>false</skip>
                  <includes>
                    <include>**/sequencefiles/*IT.java</include>
                  </includes>
                  <!-- Use Isolated Classloader so that dataflow can find all files
                                         that must be staged.
                                    -->
                  <forkCount>1</forkCount>
                  <useSystemClassLoader>false</useSystemClassLoader>

                  <!-- prevent multiple executions from clobering each other -->
                  <summaryFile>${project.build.directory}/failsafe-reports/sequencefile-tests/failsafe-summary.xml</summaryFile>
                  <reportsDirectory>${project.build.directory}/failsafe-reports/sequencefile-tests</reportsDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>beamIntegrationTest</id>
      <!-- Requires system properties to be set, see TestProperties.java -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>beam-integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>

                <configuration>
                  <skip>false</skip>
                  <includes>
                    <include>**/*IT.java</include>
                  </includes>
                  <!-- Use Isolated Classloader so that dataflow can find all files
                       that must be staged.
                  -->
                  <forkCount>1</forkCount>
                  <useSystemClassLoader>false</useSystemClassLoader>

                  <!-- Run tests in parallel -->
                  <parallel>all</parallel>
                  <threadCount>10</threadCount>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
