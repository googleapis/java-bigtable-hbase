<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2015 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.google.cloud.bigtable</groupId>
    <artifactId>bigtable-hbase-1.x-parent</artifactId>
    <version>2.12.1-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
  </parent>

  <artifactId>bigtable-hbase-1.x-integration-tests</artifactId>
  <packaging>jar</packaging>
  <name>${project.groupId}:${project.artifactId}</name>
  <description>
    This project contains test cases that ought to work for either
    bigtable-hbase or hbase proper.
  </description>

  <properties>
    <hbase.version>${hbase1.version}</hbase.version>
    <google.bigtable.connection.impl>com.google.cloud.bigtable.hbase1_x.BigtableConnection</google.bigtable.connection.impl>
    <test.timeout>1800</test.timeout>

    <!-- System property `int-test-1x-deps.mode` selects which dependency configuration is active.
      It can be be one of 3 states: unset, `cbt-shaded-hbase-unshaded` and `cbt-shaded-hbase-minimal-unshaded`
      The default (unset) will use unshaded bigtable-hbase adapter and hbase-shaded-client.
      The other 2 modes will use bigtable-hbase-1x-shaded artifact and either the full hbase-client
      or a partial hbase-client, that only includes the bare minimum of hbase-client.
    -->

    <!-- This controls the hadoop version in the `cbt-shaded-hbase-minimal-unshaded` mode -->
    <minimal-dep-hadoop.version>3.3.6</minimal-dep-hadoop.version>
  </properties>

  <profiles>
    <!-- NOTE: this profile is controlled via `int-test-1x-deps.mode` property -->
    <profile>
      <id>cbt-unshaded-hbase-shaded-deps</id>
      <activation>
        <property>
          <!-- On by default -->
          <name>!int-test-1x-deps.mode</name>
        </property>
      </activation>

      <dependencies>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-shaded-client</artifactId>
          <version>${hbase1.version}</version>
          <exclusions>
            <exclusion>
              <groupId>log4j</groupId>
              <artifactId>log4j</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>ch.qos.reload4j</groupId>
          <artifactId>reload4j</artifactId>
          <version>${reload4j.version}</version>
        </dependency>

        <dependency>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-hbase-1.x</artifactId>
          <version>2.12.1-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
          <exclusions>
            <exclusion>
              <groupId>org.apache.hbase</groupId>
              <artifactId>hbase-shaded-client</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>

    <!-- NOTE: this profile is controlled via `int-test-1x-deps.mode` property -->
    <profile>
      <id>cbt-shaded-hbase-unshaded-deps</id>

      <activation>
        <property>
          <name>int-test-1x-deps.mode</name>
          <value>cbt-shaded-hbase-unshaded</value>
        </property>
      </activation>

      <dependencies>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-client</artifactId>
          <version>${hbase1.version}</version>
          <exclusions>
            <exclusion>
              <groupId>log4j</groupId>
              <artifactId>log4j</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <dependency>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-hbase-1.x-shaded</artifactId>
          <version>2.12.1-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
          <exclusions>
            <exclusion>
              <groupId>org.apache.hbase</groupId>
              <artifactId>hbase-shaded-client</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>

    <!-- NOTE: this profile is controlled via `int-test-1x-deps.mode` property -->
    <profile>
      <id>cbt-shaded-hbase-minimal-unshaded-deps</id>

      <activation>
        <property>
          <name>int-test-1x-deps.mode</name>
          <value>cbt-shaded-hbase-minimal-unshaded</value>
        </property>
      </activation>

      <!-- HBase doesnt have an interface/value only artifact, and the client jar pulls in a lot
       of extra deps that bigtable doesn't need.
       This profile starts with hbase-client w/o transitive deps and adds all the necessary deps
       to allow the bigtable-hbase to properly function. This was done experimentally by adding
       missing deps until the integration tests pass.

       The HBase & Hadoop have large set of transitive deps, so we explicitly exclude all of them
       add them manually. All hbase deps are pinned to hbase < 2.0. Everything else is using the
       latest available version.
     -->

      <dependencies>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-client</artifactId>
          <version>${hbase.version}</version>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.version}</version>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <!-- in hbase 1x: org.apache.hadoop.hbase.client.Admin exposes the following protos as return types:
          AdminProtos#GetRegionInfoResponse
          HBaseProtos#SnapshotDescription
          MasterProtos#SnapshotResponse

          However, bigtable-hbase doesn't implement the snapshot apis, so those methods will not actually
          do anything to begin with. However, to be able to load the Admin class, we need those types
          on the classpath. So just load the proto generated classes
        -->
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-protocol</artifactId>
          <version>${hbase.version}</version>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <!-- HBase uses Configuration machinery from hadoop, the smallest dep we can get is hadoop-common -->
        <!-- Since hadoop 2.8.x is no longer being updated and all the hadoop version prior to 3.2.4 had CVEs,
        we upgrade hadoop to the latest version as well -->
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${minimal-dep-hadoop.version}</version>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-auth</artifactId>
          <version>${minimal-dep-hadoop.version}</version>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <!-- Pull in the minimal deps to get hadoop Configuration to work and update all deps to latest version -->
        <dependency>
          <groupId>org.apache.hadoop.thirdparty</groupId>
          <artifactId>hadoop-shaded-guava</artifactId>
          <version>1.1.1</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.woodstox</groupId>
          <artifactId>woodstox-core</artifactId>
          <version>6.5.1</version>
        </dependency>
        <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-configuration2</artifactId>
          <version>2.9.0</version>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>1.6.1</version>
        </dependency>
        <dependency>
          <groupId>commons-collections</groupId>
          <artifactId>commons-collections</artifactId>
          <version>3.2.2</version>
        </dependency>

        <!-- Pull in hbase deps piecemeal and upgrade them to latest versions -->

        <!-- Guava is used throughout the HBase client. Its used for:
          - connection creation (UserProvider uses Cache & ListeningExecutorService)
          - value class validation (ie. HColumnDescriptor uses Preconditions)
          - byte manipulation (TableName.isLegalFullyQualifiedTableName uses Bytes)
          - etc
          However, it seems like everything runs with latest version guava
        -->
        <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>32.1.3-jre</version>
        </dependency>
        <!-- HBase 1 uses commons-logging - upgrade it to latest version -->
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>1.3.0</version>
        </dependency>
        <!-- HRegionInfo.createRegionName() uses Hex to encode the md5 hash of the name -->
        <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <version>1.16.0</version>
        </dependency>
        <!-- in hbase 1x: org.apache.hadoop.hbase.client.Admin exposes  RpcChannel & BlockingRpcChannel
        However those methods are not implemented, but to load the Admin class, they must be present.
        HColumnDescriptor exposes a number of generated proto messages
        -->
        <dependency>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
          <version>3.25.1</version>
        </dependency>

        <dependency>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-hbase-1.x-shaded</artifactId>
          <version>2.12.1-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
          <exclusions>
            <exclusion>
              <groupId>org.apache.hbase</groupId>
              <artifactId>hbase-shaded-client</artifactId>
            </exclusion>

            <!-- This is only necessary modules built in the java-bigtable-hbase repo. End user
            applications don't need these exclusions.
            Workaround MNG-5899 & MSHADE-206. Maven >= 3.3.0 doesn't use the dependency reduced
            pom.xml files when invoking the build from a parent project. So we have to manually exclude
            the dependencies. Note that this works in conjunction with the manually promoted dependencies
            in bigtable-hbase-1.x-shaded/pom.xml -->
            <exclusion>
              <groupId>com.google.cloud.bigtable</groupId>
              <artifactId>bigtable-hbase-1.x</artifactId>
            </exclusion>
            <exclusion>
              <groupId>com.google.cloud</groupId>
              <artifactId>google-cloud-bigtable</artifactId>
            </exclusion>
            <exclusion>
              <groupId>io.opencensus</groupId>
              <artifactId>*</artifactId>
            </exclusion>
            <exclusion>
              <groupId>io.grpc</groupId>
              <artifactId>grpc-census</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>


    <profile>
      <id>bigtableIntegrationTest</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/IntegrationTests.java</include>
                  </includes>
                  <excludedGroups>KnownGap</excludedGroups>

                  <redirectTestOutputToFile>true</redirectTestOutputToFile>

                  <!-- Run tests in parallel -->
                  <parallel>classes</parallel>
                  <threadCount>4</threadCount>

                  <!-- Fork & set system properties -->
                  <forkCount>1</forkCount>
                  <systemPropertyVariables>
                    <google.bigtable.test_env>cloud</google.bigtable.test_env>
                  </systemPropertyVariables>
                  <forkedProcessTimeoutInSeconds>${test.timeout}</forkedProcessTimeoutInSeconds>

                  <!-- Make sure to fail the build when the suite fails to initialize -->
                  <failIfNoTests>true</failIfNoTests>

                  <!-- prevent multiple executions from clobering each other -->
                  <summaryFile>${project.build.directory}/failsafe-reports/integration-tests/failsafe-summary.xml</summaryFile>
                  <reportsDirectory>${project.build.directory}/failsafe-reports/integration-tests</reportsDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>hbaseLocalMiniClusterTest</id>
      <build>
        <plugins>
          <!-- start & stop the minicluster around the integration tests -->
          <plugin>
            <groupId>com.google.cloud.bigtable</groupId>
            <artifactId>hbase-minicluster-maven-plugin</artifactId>
            <version>2.12.1-SNAPSHOT</version>

            <executions>
              <execution>
                <goals>
                  <goal>start</goal>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>local-hbase-cluster-test</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/IntegrationTests.java</include>
                  </includes>
                  <excludedGroups>KnownHBaseGap</excludedGroups>
                  <forkedProcessTimeoutInSeconds>${test.timeout}</forkedProcessTimeoutInSeconds>
                  <!-- Make sure to fail the build when the suite fails to initialize -->
                  <failIfNoTests>true</failIfNoTests>

                  <!-- prevent multiple executions from clobering each other -->
                  <summaryFile>${project.build.directory}/failsafe-reports/minicluster-tests/failsafe-summary.xml</summaryFile>
                  <reportsDirectory>${project.build.directory}/failsafe-reports/minicluster-tests</reportsDirectory>
                  <systemPropertyVariables>
                    <google.bigtable.test_env>minicluster</google.bigtable.test_env>
                    <!-- populated by hbase-minicluster-maven-plugin -->
                    <hbase.zookeeper.property.clientPort>${hbase.zookeeper.property.clientPort}</hbase.zookeeper.property.clientPort>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>emulatorTests</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>emulator-integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/IntegrationTests.java</include>
                  </includes>
                  <excludedGroups>KnownEmulatorGap,KnownGap</excludedGroups>
                  <systemPropertyVariables>
                    <google.bigtable.test_env>emulator</google.bigtable.test_env>
                  </systemPropertyVariables>
                  <forkedProcessTimeoutInSeconds>${test.timeout}</forkedProcessTimeoutInSeconds>
                  <!-- Make sure to fail the build when the suite fails to initialize -->
                  <failIfNoTests>true</failIfNoTests>

                  <!-- prevent multiple executions from clobbering each other -->
                  <summaryFile>${project.build.directory}/failsafe-reports/emulator-tests/failsafe-summary.xml</summaryFile>
                  <reportsDirectory>${project.build.directory}/failsafe-reports/emulator-tests</reportsDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


  <dependencies>
    <!-- NOTE: bigtable-hbase & hbase-client deps are specified via profiles above -->

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>bigtable-hbase-integration-tests-common</artifactId>
      <version>2.12.1-SNAPSHOT</version> <!-- {x-version-update:bigtable-client-parent:current} -->
      <type>test-jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.cloud.bigtable</groupId>
      <artifactId>bigtable-internal-test-helper</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.cloud.bigtable</groupId>
          <artifactId>bigtable-hbase</artifactId>
        </exclusion>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Misc -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Testing deps -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>${truth.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Start Skip publishing -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <configuration>
            <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <configuration>
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <configuration>
            <skipSource>true</skipSource>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <!-- End Skip publishing -->
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.google.cloud.bigtable</groupId>
        <artifactId>hbase-minicluster-maven-plugin</artifactId>
        <version>2.12.1-SNAPSHOT</version>  <!-- {x-version-update:bigtable-client-parent:current} -->

        <dependencies>
          <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-shaded-testing-util</artifactId>
            <version>${hbase1.version}</version>
            <exclusions>
              <!-- Reroute all logging to slf4j & simple-logger in maven -->
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
              </exclusion>
              <exclusion>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
              </exclusion>
            </exclusions>
          </dependency>

          <!-- Force upgrade commons-logging to 1.3.0 so that it re-routes over slf4j which maven uses -->
          <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.3.0</version>
          </dependency>
          <!-- Force log4j messages -> slf4j -> maven's simplelogger -->
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.36</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <excludes>
                <exclude>**/*.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
